openapi: 3.0.3
info:
  title: Brother QL Printer API
  description: |
    API for controlling Brother QL label printers, enabling customizable text and image printing.
    This API allows for printing formatted text and images on labels with various settings.
  version: 3.1.0
  contact:
    name: Brother QL Printer App Support
    url: https://github.com/dodoooh/brother_ql_app/issues

servers:
  - url: /api/v1
    description: Default API server

tags:
  - name: printer
    description: Printer operations
  - name: text
    description: Text printing operations
  - name: image
    description: Image printing operations
  - name: qrcode
    description: QR code operations
  - name: label
    description: Combined label layouts
  - name: settings
    description: Settings management

paths:
  /printers:
    get:
      summary: Get available printers
      description: Returns a list of configured printers
      operationId: api.printer_controller.get_printers
      tags:
        - printer
      responses:
        '200':
          description: List of printers
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Printer'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /printers/status:
    post:
      summary: Check printer status
      description: Checks if a printer is available and ready
      operationId: api.printer_controller.check_printer_status
      tags:
        - printer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrinterStatusRequest'
      responses:
        '200':
          description: Printer status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrinterStatus'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
          
  /printers/keep-alive:
    get:
      summary: Get keep alive status
      description: Gets the current status of the keep alive feature
      operationId: api.printer_controller.get_keep_alive_status
      tags:
        - printer
      responses:
        '200':
          description: Keep alive status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeepAliveStatus'
        '500':
          $ref: '#/components/responses/InternalServerError'
    
    put:
      summary: Update keep alive settings
      description: Updates the keep alive settings and starts/stops the keep alive thread
      operationId: api.printer_controller.update_keep_alive
      tags:
        - printer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KeepAliveRequest'
      responses:
        '200':
          description: Keep alive updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeepAliveResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /text/print:
    post:
      summary: Print text on a label
      description: Prints formatted text on a label with specified settings
      operationId: api.text_controller.print_text
      tags:
        - text
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TextPrintRequest'
      responses:
        '200':
          description: Text printed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrintResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /image/print:
    post:
      summary: Print image on a label
      description: Prints an uploaded image on a label with specified settings
      operationId: api.image_controller.print_image
      tags:
        - image
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
                  description: The image file to print
                settings:
                  type: string
                  description: JSON string containing print settings
                  example: '{"printer_uri": "tcp://192.168.1.100", "label_size": "62"}'
              required:
                - image
      responses:
        '200':
          description: Image printed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrintResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
          
  /qrcode/print:
    post:
      summary: Print QR code on a label
      description: Generates and prints a QR code on a label with specified settings
      operationId: api.qrcode_controller.print_qr_code
      tags:
        - qrcode
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QRCodePrintRequest'
      responses:
        '200':
          description: QR code printed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrintResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
          
  /label/text-qrcode:
    post:
      summary: Print label with text and QR code
      description: Prints a label with text on the left (2/3) and QR code on the right (1/3)
      operationId: api.label_controller.print_text_qrcode_label
      tags:
        - label
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TextQRCodeLabelRequest'
      responses:
        '200':
          description: Label printed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrintResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /settings:
    get:
      summary: Get current settings
      description: Returns the current global settings
      operationId: api.settings_controller.get_settings
      tags:
        - settings
      responses:
        '200':
          description: Current settings
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Settings'
        '500':
          $ref: '#/components/responses/InternalServerError'
    
    put:
      summary: Update settings
      description: Updates the global settings
      operationId: api.settings_controller.update_settings
      tags:
        - settings
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Settings'
      responses:
        '200':
          description: Settings updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'

components:
  schemas:
    KeepAliveStatus:
      type: object
      properties:
        enabled:
          type: boolean
          description: Whether keep alive is enabled in settings
          example: true
        interval:
          type: integer
          description: Interval between pings in seconds
          example: 60
        running:
          type: boolean
          description: Whether the keep alive thread is currently running
          example: true
    
    KeepAliveRequest:
      type: object
      properties:
        enabled:
          type: boolean
          description: Whether to enable or disable keep alive
          example: true
          default: true
        interval:
          type: integer
          description: Interval between pings in seconds (minimum 10)
          example: 60
          default: 60
          minimum: 10
          maximum: 3600
      required:
        - enabled
    
    KeepAliveResponse:
      type: object
      properties:
        success:
          type: boolean
          description: Whether the operation was successful
          example: true
        message:
          type: string
          description: Status message
          example: "Keep alive started for tcp://192.168.1.100 with interval 60 seconds"
        enabled:
          type: boolean
          description: Whether keep alive is now enabled
          example: true
        interval:
          type: integer
          description: Current interval between pings in seconds
          example: 60
    Printer:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the printer
          example: "printer1"
        name:
          type: string
          description: Display name for the printer
          example: "Office Printer"
        printer_uri:
          type: string
          description: URI for connecting to the printer
          example: "tcp://192.168.1.100"
        printer_model:
          type: string
          description: Model of the Brother QL printer
          example: "QL-800"
        label_size:
          type: string
          description: Default label size for this printer
          example: "62"
      required:
        - id
        - printer_uri
        - printer_model
        - label_size

    PrinterStatusRequest:
      type: object
      properties:
        printer_uri:
          type: string
          description: URI for connecting to the printer (e.g., tcp://192.168.1.100)
          example: "tcp://192.168.1.100"
          default: "tcp://192.168.1.100"
        printer_model:
          type: string
          description: Model of the Brother QL printer (e.g., QL-800, QL-810W, QL-820NWB)
          example: "QL-800"
          default: "QL-800"
          enum: ["QL-500", "QL-550", "QL-560", "QL-570", "QL-580N", "QL-650TD", "QL-700", "QL-710W", "QL-720NW", "QL-800", "QL-810W", "QL-820NWB", "QL-1050", "QL-1060N", "QL-1100", "QL-1100NWB", "QL-1115NWB"]
      required:
        - printer_uri
        - printer_model

    PrinterStatus:
      type: object
      properties:
        available:
          type: boolean
          description: Whether the printer is available
          example: true
        status:
          type: string
          description: Status message
          example: "Printer is ready"
        details:
          type: object
          description: Additional status details
          additionalProperties: true

    TextPrintRequest:
      type: object
      properties:
        text:
          type: string
          description: Text to print, can include HTML formatting (e.g., <b>Bold</b>, <br> for line break)
          example: "<b>Hello World!</b>\nThis is a test print."
          default: "Hello World!\nThis is a test print."
        settings:
          $ref: '#/components/schemas/PrintSettings'
      required:
        - text
        - settings
        
    TextQRCodeLabelRequest:
      type: object
      properties:
        qr:
          type: object
          description: QR code settings
          properties:
            data:
              type: string
              description: Data to encode in the QR code
              example: "https://example.com"
              default: "https://example.com"
            position:
              type: string
              description: Position of the QR code
              enum: [left, right]
              example: "right"
              default: "right"
            version:
              type: integer
              description: QR code version (1-40, higher values allow more data)
              example: 1
              default: 1
              minimum: 1
              maximum: 40
            size:
              type: integer
              description: Overall size of the QR code in pixels
              example: 400
              default: 400
              minimum: 100
              maximum: 600
            box_size:
              type: integer
              description: Size of each box in pixels
              example: 10
              default: 10
              minimum: 1
              maximum: 100
            border:
              type: integer
              description: Border size in boxes
              example: 4
              default: 4
              minimum: 0
              maximum: 10
            error_correction:
              type: string
              description: Error correction level (L=7%, M=15%, Q=25%, H=30%)
              enum: [L, M, Q, H]
              example: "M"
              default: "M"
        text:
          type: object
          description: Text settings
          properties:
            content:
              type: string
              description: Text to display on the side (can include line breaks with \n)
              example: "Product: Widget XYZ\nSKU: 12345\nPrice: $19.99"
              default: "Product: Widget XYZ\nSKU: 12345\nPrice: $19.99"
            alignment:
              type: string
              description: Alignment of the text
              enum: [left, center, right]
              example: "left"
              default: "left"
            font_size:
              type: integer
              description: Font size for the text
              example: 30
              default: 30
              minimum: 10
              maximum: 100
        settings:
          $ref: '#/components/schemas/PrintSettings'
      required:
        - qr
        - text
        - settings
        
    QRCodePrintRequest:
      type: object
      properties:
        qr:
          type: object
          description: QR code settings
          properties:
            data:
              type: string
              description: Data to encode in the QR code
              example: "https://example.com"
              default: "https://example.com"
            version:
              type: integer
              description: QR code version (1-40, higher values allow more data)
              example: 1
              default: 1
              minimum: 1
              maximum: 40
            size:
              type: integer
              description: Overall size of the QR code in pixels
              example: 400
              default: 400
              minimum: 100
              maximum: 600
            box_size:
              type: integer
              description: Size of each box in pixels
              example: 10
              default: 10
              minimum: 1
              maximum: 100
            border:
              type: integer
              description: Border size in boxes
              example: 4
              default: 4
              minimum: 0
              maximum: 10
            error_correction:
              type: string
              description: Error correction level (L=7%, M=15%, Q=25%, H=30%)
              enum: [L, M, Q, H]
              example: "M"
              default: "M"
        text:
          type: object
          description: Text settings
          properties:
            content:
              type: string
              description: Text to display with the QR code (if not provided, data will be used)
              example: "Scan me!"
            position:
              type: string
              description: Position of the text relative to the QR code
              enum: [none, top, bottom]
              example: "bottom"
              default: "bottom"
            font_size:
              type: integer
              description: Font size for the text
              example: 30
              default: 30
              minimum: 10
              maximum: 100
            alignment:
              type: string
              description: Text alignment
              enum: [left, center, right]
              example: "center"
              default: "center"
        settings:
          $ref: '#/components/schemas/PrintSettings'
      required:
        - qr
        - settings

    PrintSettings:
      type: object
      properties:
        printer_uri:
          type: string
          description: URI for connecting to the printer (e.g., tcp://192.168.1.100)
          example: "tcp://192.168.1.100"
          default: "tcp://192.168.1.100"
        printer_model:
          type: string
          description: Model of the Brother QL printer
          example: "QL-800"
          default: "QL-800"
          enum: ["QL-500", "QL-550", "QL-560", "QL-570", "QL-580N", "QL-650TD", "QL-700", "QL-710W", "QL-720NW", "QL-800", "QL-810W", "QL-820NWB", "QL-1050", "QL-1060N", "QL-1100", "QL-1100NWB", "QL-1115NWB"]
        label_size:
          type: string
          description: Size of the label
          example: "62"
          default: "62"
          enum: ["12", "12+17", "18", "29", "38", "50", "54", "62", "62red", "102", "103", "104", "17x54", "17x87", "23x23", "29x42", "29x90", "39x90", "39x48", "52x29", "54x29", "60x86", "62x29", "62x100", "102x51", "102x152", "103x164", "d12", "d24", "d58", "pt12", "pt18", "pt24", "pt36"]
        rotate:
          type: integer
          description: Rotation angle in degrees
          example: 0
          default: 0
          enum: [0, 90, 180, 270]
        threshold:
          type: number
          format: float
          description: Threshold value for image processing (0-100)
          example: 70.0
          default: 70.0
          minimum: 0
          maximum: 100
        dither:
          type: boolean
          description: Enable dithering
          example: false
          default: false
        compress:
          type: boolean
          description: Enable compression
          example: false
          default: false
        red:
          type: boolean
          description: Use red ink (for compatible printers)
          example: false
          default: false
      required:
        - printer_uri
        - printer_model
        - label_size

    Settings:
      type: object
      properties:
        printer_uri:
          type: string
          description: Default printer URI (e.g., tcp://192.168.1.100)
          example: "tcp://192.168.1.100"
          default: "tcp://192.168.1.100"
        printer_model:
          type: string
          description: Default printer model
          example: "QL-800"
          default: "QL-800"
          enum: ["QL-500", "QL-550", "QL-560", "QL-570", "QL-580N", "QL-650TD", "QL-700", "QL-710W", "QL-720NW", "QL-800", "QL-810W", "QL-820NWB", "QL-1050", "QL-1060N", "QL-1100", "QL-1100NWB", "QL-1115NWB"]
        label_size:
          type: string
          description: Default label size
          example: "62"
          default: "62"
          enum: ["12", "12+17", "18", "29", "38", "50", "54", "62", "62red", "102", "103", "104", "17x54", "17x87", "23x23", "29x42", "29x90", "39x90", "39x48", "52x29", "54x29", "60x86", "62x29", "62x100", "102x51", "102x152", "103x164", "d12", "d24", "d58", "pt12", "pt18", "pt24", "pt36"]
        font_size:
          type: integer
          description: Default font size
          example: 50
          default: 50
          minimum: 10
          maximum: 100
        alignment:
          type: string
          description: Default text alignment
          enum: [left, center, right]
          example: "left"
          default: "left"
        rotate:
          type: integer
          description: Default rotation angle
          example: 0
          default: 0
          enum: [0, 90, 180, 270]
        threshold:
          type: number
          format: float
          description: Default threshold value (0-100)
          example: 70.0
          default: 70.0
          minimum: 0
          maximum: 100
        dither:
          type: boolean
          description: Default dithering setting
          example: false
          default: false
        compress:
          type: boolean
          description: Default compression setting
          example: false
          default: false
        red:
          type: boolean
          description: Default red ink setting
          example: false
          default: false
        keep_alive_enabled:
          type: boolean
          description: Whether keep alive is enabled
          example: false
          default: false
        keep_alive_interval:
          type: integer
          description: Interval between keep alive pings in seconds
          example: 60
          default: 60
          minimum: 10
          maximum: 3600
      required:
        - printer_uri
        - printer_model
        - label_size

    PrintResponse:
      type: object
      properties:
        success:
          type: boolean
          description: Whether the print operation was successful
          example: true
        job_id:
          type: string
          description: Unique identifier for the print job
          example: "job_12345"
        message:
          type: string
          description: Success message
          example: "Print job submitted successfully"

    SuccessResponse:
      type: object
      properties:
        success:
          type: boolean
          description: Whether the operation was successful
          example: true
        message:
          type: string
          description: Success message
          example: "Operation completed successfully"

    Error:
      type: object
      properties:
        code:
          type: string
          description: Error code
          example: "PRINTER_NOT_FOUND"
        message:
          type: string
          description: Error message
          example: "The specified printer could not be found"
        details:
          type: object
          description: Additional error details
          additionalProperties: true

  responses:
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: "INVALID_REQUEST"
            message: "Invalid request parameters"
            details:
              field: "printer_uri"
              reason: "Required field is missing"

    NotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: "PRINTER_NOT_FOUND"
            message: "The specified printer could not be found"
            details:
              printer_uri: "tcp://192.168.1.100"

    InternalServerError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: "INTERNAL_ERROR"
            message: "An unexpected error occurred"
            details:
              error_id: "e12345"
